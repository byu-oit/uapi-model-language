---
"$uapi": "0.1"
"$schema": "http://api.byu.edu/uapi/v0.1"
info:
  name: "Persons"
  version: "3.0"
resources:
  persons:
    type: list
    keys: [byu_id]
    properties:
      byu_id:
        value:
          type: string
          constraints:
            pattern: "^[0-9]{9}$"
        api_types: [system]
      created_by_byu_id:
        value:
          type: string
          constraints:
            pattern: "^[0-9]{9}$"
        has_description: true
        api_types: [system]
      created_datetime:
        value:
          type: date-time
        api_types: [system]
      deceased:
        value:
          type: boolean
        api_types: [related]
      first_name:
        value:
          type: string
        api_types: [modifiable, read-only]
      high_school_city:
        value:
          type: string
        api_types: [derived]
      high_school_code:
        value:
          type: string
        has_description: true
        api_types: [modifiable, read-only]
      high_school_state_code:
        value:
          type: string
        has_description: true
        api_types: [derived]
      home_country_code:
        value:
          type: string
        has_description: true
        api_types: [modifiable, read-only]
      home_state_code:
        value:
          type: string
        has_description: true
        api_types: [modifiable, read-only]
      home_town:
        value:
          type: string
        api_types: [modifiable, read-only]
      merge_in_process:
        value:
          type: boolean
        api_types: [derived]
      middle_name:
        value:
          type: string
        api_types: [modifiable, read-only]
      name_fnf:
        value:
          type: string
        api_types: [derived]
      name_lnf:
        value:
          type: string
        api_types: [derived]
      net_id:
        value:
          type: string
        api_types: [related]
      person_id:
        value:
          type: string
        api_types: [system]
      personal_email_address:
        value:
          type: string
        api_types: [related]
      preferred_first_name:
        value:
          type: string
        nullable: true
        api_types: [modifiable, read-only]
      preferred_name:
        value:
          type: string
        api_types: [derived]
      preferred_surname:
        value:
          type: string
        nullable: true
        api_types: [modifiable, read-only]
      primary_phone_number:
        value:
          type: string
        nullable: true
        api_types: [related]
      rest_of_name:
        value:
          type: string
        api_types: [derived]
      restricted:
        value:
          type: boolean
        api_types: [modifiable, read-only]
      sex:
        value:
          type: string
          constraints:
            enum: [M, F, '?', U]
        api_types: [modifiable, read-only]
      suffix:
        value:
          type: string
        nullable: true
        api_types: [modifiable, read-only]
      surname:
        value:
          type: string
        nullable: true
        api_types: [modifiable, read-only]
      updated_by_byu_id:
        value:
          type: string
          constraints:
            pattern: '^[0-9]{9}$'
        has_description: true
        api_types: [system]
      updated_datetime:
        value:
          type: date-time
        api_types: [system]
    list:
      filters:
        byu_ids:
          documentation: The person's BYU ID
          type: string
          constraints:
            pattern: '^[0-9]{9}$'
          allow_multiple: true
        person_ids:
          documentation: The person's Person ID
          type: string
          constraints:
            pattern: '^\d{3}2\d{4}2$'
          allow_multiple: true
        net_ids:
          documentation: The person's Net ID
          type: string
          constraints:
            pattern: '^[a-z][a-z0-9]{0,8}$'
          allow_multiple: true
        credentials.credential_type:
          documentation: Return people who have a credential of this type
          type: string
        credentials.credential_id:
          documentation: Return people who have a credential with this ID
          type: string
        credentials.user_names:
          documentation: Return people who have a credential with this user name
          type: string
          allow_multiple: true
        email_addresses.email_address:
          documentation: >-
            The person's PERSONAL email address. A case-insensitive search is
            performed.  A wildcard character is automatically appended.
          type: string # TODO: Add email UAPI type?
        email_aliases.email_alias:
          documentation: >-
            The person's email alias. A case-insensitive search is performed.  A
            wildcard character is automatically appended.
          type: string
        phones.phone_numbers:
          documentation: >-
            The person's phone number. A numerics-only search is performed.
          type: string
          constraints:
            pattern: '^(|[0-9(+])[0-9()-./ ]{0,28}[0-9]$'
          allow_multiple: true
        surname:
          documentation: >-
            The person's surname.  A case-insensitive search is performed.
          type: string
          supported_operators: [
            starts_with,
            ends_with,
            contains,
            is_null,
            is_empty
          ]
        rest_of_name:
          documentation: >-
            The person's given names.  A case-insensitive search is performed.
          type: string
          supported_operators: [
            starts_with,
            ends_with,
            contains,
            is_null,
            is_empty
          ]
        preferred_surname:
          documentation: >-
            The person's preferred surname.  A case-insensitive search is performed.
          type: string
          supported_operators: [
            starts_with,
            ends_with,
            contains,
            is_null,
            is_empty
          ]
        preferred_first_name:
          documentation: >-
            The person's preferred first name.  A case-insensitive search is performed.
          type: string
          supported_operators: [
            starts_with,
            ends_with,
            contains,
            is_null,
            is_empty
          ]
        sex:
          documentation: The person's sex
          type: string
          constraints:
            enum: ['?', F, M, f, m]
        deceased:
          documentation: The person's deceased status
          type: boolean
        vital_record.marital_status:
          documentation: The person's marital status
          type: string
          constraints:
            enum:
              - '?'
              - D
              - M
              - S
              - W
              - d
              - m
              - s
              - w
        personal_record.religion_code:
          documentation: The person's religion. Validated through the meta/religion service.
          type: string
          constraints:
            pattern: '^([?]{3}|[A-Za-z]{3})$'
            # TODO: Add 'domain' constraint
        personal_record.citizenship_country_code:
          documentation: The person's citizenship. Validated throught the meta/country service.
          type: string
          constraints:
            pattern: '^([?]{3}|[A-Za-z]{3})$'
        home_town:
          documentation: The person's home town
          type: string
          constraints:
            maxLength: 30
            pattern: '^([A-Za-z-]+ )*?[A-Za-z-]+$'
        home_state_code:
          documentation: The person's home state. Validated through the meta/state service.
          type: string
          constraints:
            pattern: '^([?]{2}|[A-Za-z]{2,5})$'
        home_country_code:
          documentation: The person's home country. Validated through the meta/country service.
          type: string
          constraints:
            pattern: '^([?]{2}|[A-Za-z]{2,5})$'
        restricted:
          documentation: The person's FERPA restricted status.
          type: boolean
        personal_record.visa_type:
          documentation: The person's visa type. Validated through the meta/visa_type service
          type: string
          constraints:
            maxLength: 3
            pattern: '^( |[0-9A-Za-z?-]{1,3})$'
        employee_summary.employee_role:
          documentation: The person's employee type in XXX-XX-XXX format.
          type: string
          constraints:
            pattern: >-
              ^[ACEOPRS][ADEFHMNOT][ACDFHMNPS]-[CFOPST][123BCMT]-[ADLRT][CER][CMTV]$
        student_summary.student_status:
          documentation: The person's student status
          type: string
        group_memberships.group_ids:
          documentation: Return people who are members of a group. Group ID must match exactly.
          type: string
          constraints:
            minLength: 1
          allow_multiple: true
        groups_administered.group_ids:
          documentation: Return people who are administrators of a group. Group ID must match exactly.
          type: string
          constraints:
            minLength: 1
          allow_multiple: true
      subset:
        default_size: 100
        max_size: 100
      search:
        search_contexts_available:
          identifiers:
          - net_id
          - sort_name
          - byu_id
          names:
          - preferred_last_name
          - last_name
          - preferred_first_name
          - first_name
          locations:
          - home_country
          - home_state
      sorting:
        available_sort_properties:
          - byu_id
          - net_id
          - name_lnf
          - name_fnf
          - preferred_name
          - created_datetime
          - updated_datetime
        default_sort_properties:
          - preferred_name
          - byu_id
        default_sort_order: ascending

    create:
      input:
        application/json:
          type: object
          properties:
            created_by_byu_id:
              pattern: '^( |[0-9A-Z]{1,9})$'
              type: string
            created_datetime:
              format: date-time
              type: string
            first_name:
              description: required if not updating from PRO
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            home_country_code:
              default: '???'
              pattern: '^([?]{3}|[A-Z]{2,3})$'
              type: string
            home_state_code:
              default: '??'
              pattern: '^([?]{2}|[A-Z]{2,5})$'
              type: string
            home_town:
              default: ' '
              maxLength: 30
              pattern: '^( |(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+)$'
              type: string
            middle_name:
              maxLength: 40
              pattern: '^( |(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+)$'
              type: string
            person_id:
              description: only included if updating from PRO
              maxLength: 9
              type: string
            preferred_first_name:
              maxLength: 25
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            preferred_surname:
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            sex:
              default: '?'
              enum:
                - '?'
                - F
                - M
              type: string
            suffix:
              default: ' '
              description: 'Generational suffix for name: Roman Numeral, JR, SR, Jr, or Sr'
              maxLength: 10
              minLength: 1
              pattern: >-
                ^(
                |Sr|SR|JR|Jr|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))$
              type: string
            surname:
              description: required if not updating from PRO
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            updated_by_byu_id:
              pattern: '^( |[0-9A-Z]{1,9})$'
              type: string
            updated_datetime:
              format: date-time
              type: string

    update:
      input:
        application/json:
          properties:
            first_name:
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            home_country_code:
              default: '???'
              pattern: '^([?]{3}|[A-Z]{2,3})$'
              type: string
            home_state_code:
              default: '??'
              pattern: '^([?]{2}|[A-Z]{2,5})$'
              type: string
            home_town:
              default: ' '
              maxLength: 30
              pattern: '^( |(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+)$'
              type: string
            middle_name:
              maxLength: 40
              pattern: '^( |(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+)$'
              type: string
            preferred_first_name:
              maxLength: 25
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            preferred_surname:
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            sex:
              default: '?'
              enum:
                - '?'
                - F
                - M
              type: string
            suffix:
              default: ' '
              description: 'Generational suffix for name: Roman Numeral, JR, SR, Jr, or Sr'
              maxLength: 10
              minLength: 1
              pattern: >-
                ^(
                |Sr|SR|JR|Jr|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))$
              type: string
            surname:
              maxLength: 40
              pattern: '^(?=.*?[A-Z])([A-Za-z-'']+ )*?[A-Za-z-'']+$'
              type: string
            updated_by_byu_id:
              pattern: '^( |[0-9A-Z]{1,9})$'
              type: string
            updated_datetime:
              format: date-time
              type: string
          required:
            - surname
            - first_name
          type: object

    delete: {}

    subresources:
      employee_summary:
        type: singleton
        properties:
          byu_id:
            value:
              type: string
              constraints:
                pattern: '^[0-9]{9}$'
            api_types: [system]
          department:
            value:
              type: string
            nullable: true
            api_types: [related]
          employee_role:
            value:
              type: string
            has_description: true
            api_types: [derived]
          hire_date:
            value:
              type: date
            api_types: [related]
          job_code:
            value:
              type: string
            has_description: true
            nullable: true
            api_types: [related]
          reports_to_id:
            value:
              type: string
            has_description: true
            nullable: true
            api_types: [related]
      languages:
        type: list
        keys: [language_code]
        properties:
          byu_id:
            value:
              type: string
            has_description: true
            api_types: [system]
          created_by_byu_id:
            value:
              type: string
            has_description: true
            api_types: [system]
          created_datetime:
            value:
              type: date-time
            api_types: [system]
          language_code:
            value:
              type: string
            has_description: true
            has_long_description: true
            api_types: [modifiable, read-only]
          native:
            value:
              type: boolean
            api_types: [modifiable, read-only]
          read_proficiency:
            value:
              type: string
              constraints:
                enum: [H, M, L, N]
            api_types: [modifiable, read-only]
          speak_proficiency:
            value:
              type: string
              constraints:
                enum: [H, M, L, N]
            api_types: [modifiable, read-only]
          translator:
            value:
              type: boolean
            api_types: [modifiable, read-only]
          updated_by_byu_id:
            value:
              type: string
            has_description: true
            api_types: [system]
          updated_datetime:
            value:
              type: date-time
            api_types: [system]
          write_proficiency:
            value:
              type: string
              constraints:
                enum: [H, M, L, N]
            api_types: [modifiable, read-only]
        create:
          input: {}
        update:
          input: {}
        delete: {}

#    claims:
#      age:
#        type: string
#        constraints:
#          minimum: 0
#          maximum: 120
#        relationships:
#          - gt_or_eq
#          - gt
#          - eq
#          - lt
#          - lt_or_eq
#          - not_eq
#        qualifiers:
#          as_of_date:
#            type: date
#      employee:
#        type: boolean
#        relationships: [eq]
#      full_time_employee:
#        type: boolean
#        relationships: [eq]
#      part_time_employee:
#        type: boolean
#        relationships: [eq]
#      deceased:
#        type: boolean
#        relationships: [eq]
#      member_of_group_id:
#        type: string
#        relationships: [eq, not_eq]
